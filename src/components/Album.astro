---
import {Image} from 'astro:assets';
import type {Album} from '../services/albums';

interface Props {
	album: Album;
}

const {album} = Astro.props;
const {
	title,
	artist,
	description,
	cover,
	preview,
	deezerId,
	spotifyId
} = album;
---

<article itemscope itemtype="https://schema.org/MusicAlbum">
	<header>
		<h1 itemprop="name">{title}</h1>

		<p
			itemprop="byArtist"
			itemscope
			itemtype="https://schema.org/MusicGroup"
		>
			By <span itemprop="name">{artist}</span>
		</p>

		{
			description ? (
				<p itemprop="description">{description}</p>
			) : null
		}
	</header>

	<aside class="Reflection">
		<Image
			class="Backdrop"
			src={cover}
			alt=""
			loading="eager"
			itemprop="image"
		/>
	</aside>

	<ul class="List--raw">
		{
			deezerId ? (
				<li>
					<a
						href={`https://www.deezer.com/album/${deezerId}`}
						set:text="Listen on Deezer"
					/>
				</li>
			) : null
		}
		{
			spotifyId ? (
				<li>
					<a
						href={`https://open.spotify.com/album/${spotifyId}`}
						set:text="Listen on Spotify"
					/>
				</li>
			) : null
		}
		<li>
			<figure>
				<figcaption>Track preview</figcaption>
				<audio src={preview} preload="none" controls></audio>
			</figure>
		</li>
	</ul>
</article>

<style>
	article {
		display: grid;
		grid-template:
			'header'
			'aside'
			'body';
		align-items: start;
		justify-items: start;
		gap: 0 4ch;
		margin-block-end: var(--block-spacing);
	}

	@media screen and (min-width: 80ch) {
		article {
			grid-template:
				'header aside' min-content
				'body aside' 1fr
				/ 2fr 1fr;
		}
	}

	header {
		grid-area: header;
	}

	ul {
		grid-area: body;
	}

	aside {
		grid-area: aside;
	}

	h1 {
		margin-block-end: 0.25rlh;
	}

	[itemprop='byArtist'] {
		padding-inline-start: 0.5ch;
		font-family: var(--font-serif);
		font-style: italic;
	}

	[itemprop='description'] {
	}
</style>
