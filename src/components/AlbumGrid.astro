---
import {getImage} from 'astro:assets';
import {albumCollection} from '../services/albums';
import Section from './Section.astro';
import covers from '../content/albums/covers.jpg';

const optimizedCovers = await getImage({
	src: covers
});
---

<Section isWide>
	<ul
		class="List--raw Grid Grid--10"
		style={{
			'--album-count': albumCollection.length,
			'--album-covers': `url(${optimizedCovers.src})`
		}}
	>
		{
			albumCollection.map(
				({
					id,
					index,
					title,
					artist,
					preview,
					dominantColor
				}) => {
					const linkTitle = `${title} by ${artist}`;

					return (
						<li>
							<a
								class="Reflection"
								href={`/albums/${id}`}
								title={linkTitle}
								data-preview={preview}
								style={`--album-index: ${index}; --album-color: ${dominantColor};`}
							/>
						</li>
					);
				}
			)
		}
	</ul>
</Section>

<style>
	a {
		--album-index: 0;
		--album-color: transparent;
		display: block;
		border-radius: var(--radius);
		background-color: var(--album-color);
		background-image: var(--album-covers);
		background-size: auto 100%;
		background-repeat: no-repeat;
		background-position-x: calc(
			100% / (var(--album-count) - 1) * var(--album-index)
		);
		aspect-ratio: 1 / 1;
	}

	a:is(:hover, :focus) {
		transform: scale(1.05);
	}
</style>
